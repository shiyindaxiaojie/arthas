Configuration:
  status: WARN
  monitorInterval: 30

  Properties:
    Property:
      - name: APP_NAME
        value: $${spring:spring.application.name:-arthas-tunnel-server}
      - name: PROFILES
        value: $${spring:spring.profiles.active}
      - name: LOG_PATH
        value: $${spring:logging.file.path:-/app/logs}
      - name: LOG_PATTERN
        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%t] %msg%n"

  Appenders:
    Console:
      name: STDOUT # 控制台
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${LOG_PATTERN}
      Filters:
        ThresholdFilter:
          level: INFO
          onMatch: ACCEPT
          onMismatch: DENY
        BurstFilter:
          level: INFO
          rate: 1000
          maxBurst: 10000
    RollingRandomAccessFile:
      - name: INFO_FILE # 默认日志文件
        fileName: ${LOG_PATH}/${APP_NAME}-info.log
        filePattern: ${LOG_PATH}/${APP_NAME}-info-%d{yyyy-MM-dd}-%i.log.gz
        ignoreExceptions: false
        PatternLayout:
          pattern: ${LOG_PATTERN}
        Policies:
          CronTriggeringPolicy: # 低峰期定时触发
            schedule: 0 0 3 * * ?
          SizeBasedTriggeringPolicy: # 基于文件大小触发
            size: 20MB
        DefaultRolloverStrategy:
          Delete:  # 历史日志清除策略，保留 30 天内的日志
            basePath: ${LOG_PATH} # 扫描目录
            maxDepth: 1 # 扫描目录深度
            IfFileName: # 匹配文件名
              glob: '${APP_NAME}-info-*.log.gz'
            IfLastModified: # 保留一周
              age: 'P7D'
        Filters:
          LevelMatchFilter:
            level: INFO
            onMatch: ACCEPT
            onMismatch: DENY
          BurstFilter:
            level: INFO
            rate: 1000
            maxBurst: 10000
      - name: WARN_FILE # 告警日志文件
        fileName: ${LOG_PATH}/${APP_NAME}-warn.log
        filePattern: ${LOG_PATH}/${APP_NAME}-warn-%d{yyyy-MM-dd}-%i.log.gz
        ignoreExceptions: false
        PatternLayout:
          pattern: ${LOG_PATTERN}
        Policies:
          CronTriggeringPolicy: # 低峰期定时触发
            schedule: 0 0 3 * * ?
          SizeBasedTriggeringPolicy: # 基于文件大小触发
            size: 20MB
        DefaultRolloverStrategy:
          Delete:  # 历史日志清除策略，保留 30 天内的日志
            basePath: ${LOG_PATH} # 扫描目录
            maxDepth: 1 # 扫描目录深度
            IfFileName: # 匹配文件名
              glob: '${APP_NAME}-warn-*.log.gz'
            IfLastModified: # 保留一周
              age: 'P7D'
        Filters:
          LevelMatchFilter:
            level: WARN
            onMatch: ACCEPT
            onMismatch: DENY
          BurstFilter:
            level: WARN
            rate: 1000
            maxBurst: 10000
      - name: ERROR_FILE # 异常日志文件
        fileName: ${LOG_PATH}/${APP_NAME}-error.log
        filePattern: ${LOG_PATH}/${APP_NAME}-error-%d{yyyy-MM-dd}-%i.log.gz
        ignoreExceptions: false
        PatternLayout:
          pattern: ${LOG_PATTERN}
        Policies:
          CronTriggeringPolicy: # 低峰期定时触发
            schedule: 0 0 3 * * ?
          SizeBasedTriggeringPolicy: # 基于文件大小触发
            size: 20MB
        DefaultRolloverStrategy:
          Delete:  # 历史日志清除策略，保留 30 天内的日志
            basePath: ${LOG_PATH} # 扫描目录
            maxDepth: 1 # 扫描目录深度
            IfFileName: # 匹配文件名
              glob: '${APP_NAME}-error-*.log.gz'
            IfLastModified: # 保留一个月
              age: 'P30D'
        Filters:
          ThresholdFilter:
            level: ERROR
            onMatch: ACCEPT
            onMismatch: DENY
          BurstFilter:
            level: ERROR
            rate: 1000
            maxBurst: 10000
  Loggers:
    Root:
      level: INFO
      includeLocation: false
      AppenderRef:
        - ref: STDOUT
        - ref: INFO_FILE
        - ref: WARN_FILE
        - ref: ERROR_FILE
    AsyncLogger:
      - name: org.springframework
        level: ERROR
      - name: org.apache
        level: ERROR
      - name: org.apache.nacos
        level: WARN
      - name: com.alibaba
        level: ERROR